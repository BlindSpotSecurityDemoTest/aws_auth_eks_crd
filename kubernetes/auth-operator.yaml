apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: auth-operator
  name: auth-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: auth-operator
      namespace: kube-system
    spec:
      automountServiceAccountToken: true
      serviceAccount: auth-operator
      containers:
        - args:
            - --verbose
          image: coveo/aws-auth-operator:v0.1
          imagePullPolicy: IfNotPresent
          name: operator
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kube-system
  name: auth-operator
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: auth-operator-role-cluster
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [iamauthenticator.k8s.aws]
    resources: [iamidentitymappings]
    verbs: [list, watch, patch, get]
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, get]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: auth-operator-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: auth-operator-role-cluster
subjects:
  - kind: ServiceAccount
    name: auth-operator
    namespace: kube-system
---
